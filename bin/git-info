#!/bin/bash

set -e

# TODO: investigate if merged at date is possible to include
# TODO: investigate if created at date is possible to include
# TODO: would prefer a git command `git-info` which accepts reports `git info branch`

COLOR_UNMERGED='\033[1;31m' # Light Red
COLOR_MERGED='\033[1;32m' # Light Green
COLOR_CURRENT='\033[1;33m' # Yellow
COLOR_MAIN='\033[1;34m' # Blue
COLOR_NONE='\033[0m'

function colorPrint {
  printf "${2} %s ${COLOR_NONE}" "$1"
}

MASTER_BRANCH=$(git main)

# shellcheck disable=SC2207
BRANCHES=($(git branch --format='%(refname:short)'))
# MERGED=($(git branch --merged "$(git main)" | tr '*' ' '))
# shellcheck disable=SC2207
MERGED=($(git branch --merged "$MASTER_BRANCH" --format='%(refname:short)'))
# shellcheck disable=SC2207
UNMERGED=($(git branch --no-merged))
CURRENT_BRANCH=$(git branch --show-current)

# Ledgend
colorPrint "merged" "$COLOR_MERGED"
colorPrint "unmerged" "$COLOR_UNMERGED"
colorPrint "current" "$COLOR_CURRENT"
colorPrint "main" "$COLOR_MAIN"
echo "" &&
echo "" &&
:

for BRANCH in "${BRANCHES[@]}"
do
  if [[ " $CURRENT_BRANCH " == *" $BRANCH "* ]]; then
    colorPrint "$BRANCH" "$COLOR_CURRENT"
    echo "" &&
    :
    continue
  fi
  if [[ " $MASTER_BRANCH " == *" $BRANCH "* ]]; then
    colorPrint "$BRANCH" "$COLOR_MAIN"
    echo "" &&
    :
    continue
  fi
  if [[ " ${MERGED[*]} " == *" $BRANCH "* ]]; then
    colorPrint "$BRANCH" "$COLOR_MERGED"
    echo "" &&
    :
    continue
  fi
  if [[ " ${UNMERGED[*]} " == *" $BRANCH "* ]]; then
    colorPrint "$BRANCH" "$COLOR_UNMERGED"
    echo "" &&
    :
    continue
  fi
done
